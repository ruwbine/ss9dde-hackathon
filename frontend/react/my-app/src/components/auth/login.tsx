// src/Login.tsx

import React from 'react';
import { useNavigate } from 'react-router-dom'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º useNavigate
import { useForm } from 'react-hook-form';
import {Axios} from 'axios';
import './login.scss';

const axios = new Axios();

const Login: React.FC = () => {
  const { register, handleSubmit, formState: { errors } } = useForm();
  const navigate = useNavigate(); 
  
  const onLogin = (data: any) => {
    axios.post('localhost:3000/auth/login', {
      data
    })
    .then((res) => res.json())
    .catch(() => console.error('Something went wrong via login', ))
  };

  return (
    <div id="login">
      <div className="login">
        <div className="login-container">
          <h1>–í–æ–π—Ç–∏</h1>
          <div className="subtitle">Hi, welcome backüëã</div>
          <div className="login-sign-up">
            <div className="login-sign-up-container">
              <p>New here?</p>
              <button onClick={() => navigate('/auth/registration')}>
                –°–æ–∑–¥–∞—Ç—å —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å
              </button>
            </div>
          </div>
          <form onSubmit={handleSubmit(onLogin)}>
            <div className="login-inputs">
              <label htmlFor="email">–ü–æ—á—Ç–∞</label>
              <input
                id="email"
                type="text"
                placeholder="example@gmail.com"
                {...register('email', { required: true, minLength: 6 })}
              />
              {errors.email && errors.email.type === 'required' && (
                <div className="error-message">–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.</div>
              )}
              {errors.email && errors.email.type === 'minLength' && (
                <div className="error-message">–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ—á—Ç—ã.</div>
              )}
              
              <label htmlFor="password">–ü–∞—Ä–æ–ª—å</label>
              <input
                id="password"
                type="password"
                placeholder="ABC@#$!12"
                {...register('password', { required: true, minLength: 6 })}
              />
              {errors.password && errors.password.type === 'required' && (
                <div className="error-message">–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.</div>
              )}
              {errors.password && errors.password.type === 'minLength' && (
                <div className="error-message">–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤.</div>
              )}
            </div>
            <div className="login-action-container">
              <div className="login-remember-me">
                –ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è
                <input type="checkbox" />
              </div>
              <button type="button" onClick={() => alert('Forgot Password clicked')}>
                –ó–∞–±—ã–ª –ü–∞—Ä–æ–ª—å?
              </button>
            </div>
            <button type="submit" className="login-btn">
              –í–æ–π—Ç–∏
            </button>
          </form>
        </div>
      </div>
    </div>
  );
};

export default Login;
